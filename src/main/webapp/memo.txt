
--세영님 파트
--기본 유저 시퀀스
--nocache 장점 : 버퍼 메모리 절약; 단점 : CPU 과도한 사용;
drop sequence userseq;
create sequence userseq
  increment by 1
  start with 1
  minvalue 1
  maxvalue 10000
  nocache;

--기본 유저 테이블
--num : 레코드 번호; ucode : 사용자 구분 코드;
--id : 아이디; pw : 비밀번호; name : 관리자, 사업체 이름, 개인회원 이름(실명);
--email : 이메일; zipcode : 우편번호; address : 주소1, 2; phone : 번호; startdate : 사이트시작일, 사업시작일, 회원생일;
drop table users cascade constraints;
create table users(
  num number primary key,
  ucode varchar2(20) unique not null,
  id varchar2(20) unique not null,
  pw varchar2(20) not null,
  name varchar2(40) not null,
  email varchar2(30) unique not null,
  zipcode number not null,
  address1 varchar2(50) not null,
  address2 varchar2(50) not null,
  phone varchar2(20) not null,
  startdate date default sysdate
);

comment on table users is '사용자 정보';
comment on column users.num is '레코드 번호';
comment on column users.ucode is '사용자 구분 코드';
comment on column users.id is '아이디';
comment on column users.pw is '비밀번호';
comment on column users.name is '관리자, 사업체 이름, 개인회원 실명';
comment on column users.email is '이메일 주소';
comment on column users.zipcode is '우편번호';
comment on column users.address1 is '주소 대분류';
comment on column users.address2 is '주소 소분류';
comment on column users.phone is '번호';
comment on column users.startdate is '사이트시작일, 사업시작일, 회원생일';


--개인(결제수단) 시퀀스
drop sequence payseq;
create sequence payseq
  increment by 1
  start with 1
  minvalue 1
  maxvalue 10000
  nocache;

--개인(결제수단) 테이블
--num : 레코드 번호; ucode : 사용자 고유 번호; paycode : 결제수단 고유 번호;
--paydetail : 결제 수단 상세 정보(카드 번호 등);
drop table pay cascade constraints;
create table pay(
  num number primary key,
  ucode varchar2(20) unique not null,
  paycode varchar2(20) unique not null,
  paydetail varchar2(20) not null,
  foreign key(ucode) references users(ucode)
);
comment on table pay is '결제수단 등록 테이블';
comment on column pay.num is '레코드 번호';
comment on column pay.ucode is '사용자 고유 번호 - 부모 users';
comment on column pay.paycode is '결제수단 고유 번호';
comment on column pay.paydetail is '결제수단 상세 정보(카드 번호 등)';


--관리자(공지사항+이벤트) 시퀀스
drop sequence noticeseq;
create sequence noticeseq
  increment by 1
  start with 1
  minvalue 1
  maxvalue 10000
  nocache;

--관리자(공지사항+이벤트) 테이블
--num : 레코드 번호; ucode : 사용자 구분 코드; postcode : 게시글 고유 번호;
--content : 게시글 내용, text 쓸지 varchar쓸지 고민 중;
--uploaddate : 게시글 올린 날짜(혹은 수정된 날짜);
drop table notice cascade constraints;
create table notice(
  num number primary key,
  ucode varchar2(20) unique not null,
  postcode varchar2(20) unique not null,
  content varchar2(4000),
  uploaddate date default sysdate,
  readcount number default 0,
  foreign key(ucode) references users(ucode)
);
comment on table notice is '공지사항+이벤트 테이블';
comment on column notice.num is '레코드 번호';
comment on column notice.ucode is '사용자 고유 번호(관리자번호) - 부모 users';
comment on column notice.postcode is '게시글 고유 번호';
comment on column notice.content is '게시글 내용';
comment on column notice.uploaddate is '게시글 올린 날짜';
comment on column notice.readcount is '게시글 조회수';


--관리자(공지사항+이벤트 이미지) 시퀀스
drop sequence noticeimgseq;
create sequence noticeimgseq
  increment by 1
  start with 1
  minvalue 1
  maxvalue 10000
  nocache;
  
--관리자(공지사항+이벤트 이미지) 테이블
--num : 레코드 번호; postcode : 게시글 고유 번호; imgcode : 이미지 고유 번호; 
--imgname : 이미지 이름; imgraw : 이미지 raw file;
drop table noticeimg cascade constraints;
create table noticeimg(
  num number primary key,
  postcode varchar2(20) not null,
  imgcode varchar2(20) unique not null,
  imgname varchar2(40),
  imgraw blob not null,
  foreign key(postcode) references notice(postcode)
);
comment on table noticeimg is '공지사항+이벤트 이미지 테이블';
comment on column noticeimg.num is '레코드 번호';
comment on column noticeimg.postcode is '게시글 고유 번호 - 부모 notice';
comment on column noticeimg.imgcode is '이미지 고유 번호';
comment on column noticeimg.imgname is '이미지 이름';
comment on column noticeimg.imgraw is '이미지 raw file';


--관리자+사용자+사업자(문의 게시판) 시퀀스
drop sequence qnaseq;
create sequence qnaseq
  increment by 1
  start with 1
  minvalue 1
  maxvalue 10000
  nocache;
  
--관리자+사용자+사업자(문의 게시판) 테이블
--num : 레코드 번호; ucode : 사용자 구분 코드; postcode : 게시글 고유 번호; pw : 게시글 비밀번호;
--content : text로 할지 varchar할지 고민 중;
--uploaddate : 게시글 업로드 일자;
drop table qna cascade constraints;
create table qna(
  num number primary key,
  ucode varchar2(20) unique not null,
  postcode varchar2(20) unique not null,
  pw varchar2(20),
  content varchar2(4000),
  uploaddate date default sysdate,
  ref number not null,
  restep number not null,
  relevel number not null,
  foreign key(ucode) references users(ucode)
);
comment on table qna is '문의 게시판 테이블';
comment on column qna.num is '레코드 번호';
comment on column qna.postcode is '게시글 고유 번호';
comment on column qna.pw is '게시글 비밀번호';
comment on column qna.content is '게시글 내용';
comment on column qna.uploaddate is '게시글 올린 날짜';


---------------------------------------------------------------
---------------------------------------------------------------
--승민님 파트
--관리자+사업자(사업장 관리) 시퀀스
drop sequence roomseq;
create sequence roomseq
  increment by 1
  start with 1
  minvalue 1
  maxvalue 10000
  nocache;
  
--관리자+사업자(사업장 관리) 테이블
--num : 레코드 번호; ucode : 사용자 구분 코드; rcode : 숙소 고유 번호;
--rname : 숙소 이름; radress : 숙소 주소; rphone : 숙소 번호; guests : 이용 가능 인원; 
--dayprice : 낮시간 비용; nightprice : 밤시간 비용; alldayprice : 1박 비용;
--inform : text로 할지 varchar할지 고민 중;
--amenity : 넓은 의미의 amenity, 부대 시설 및 비품 등;
drop table rooms cascade constraints;
create table rooms(
  num number primary key,
  ucode varchar2(20) unique not null,
  rcode varchar2(20) unique not null,
  rname varchar2(40) not null,
  radress varchar2(100) not null,
  rphone varchar2(20) not null,
  guests number not null,
  dayprice number not null,
  nightprice number not null,
  alldayprice number not null,
  inform varchar2(4000),
  amenity varchar2(1000) not null,
  foreign key(ucode) references users(ucode)
);
---------------------------------------------------------------
---------------------------------------------------------------


--사업자(고객이용관리) 시퀀스
drop sequence umanageseq;
create sequence umanageseq
  increment by 1
  start with 1
  minvalue 1
  maxvalue 10000
  nocache;
  
--개인+사업자(고객이용관리) 테이블
--num : 레코드 번호; rcode : 숙소 고유 번호; ucode : 사용자 고유 번호(개인);
--startdate : 사용 시작일; enddate : 사용 마지막; nop : 이용 고객 수;
--totalprice : 총액; status : 현재 상태(예약중, 예약 확인, 입금 완료, 이용 중, 이용 완료 등);
drop table usermanage cascade constraints;
create table usermanage(
  num number primary key,
  rcode varchar2(20) unique not null,
  ucode varchar2(20) unique not null,
  startdate date default sysdate,
  enddate date default sysdate,
  nop number not null,
  totalprice number not null,
  paycode varchar2(20) not null,
  status varchar2(20) not null,
  foreign key(rcode) references rooms(rcode),
  foreign key(ucode) references users(ucode),
  foreign key(paycode) references pay(paycode)
);
comment on table usermanage is '고객이용관리 테이블';
comment on column usermanage.num is '레코드 번호';
comment on column usermanage.rcode is '숙소 고유 번호 - 부모 rooms';
comment on column usermanage.ucode is '사용자 고유 번호(개인) - 부모 users';
comment on column usermanage.startdate is '사용 시작일';
comment on column usermanage.enddate is '사용 마지막일';
comment on column usermanage.nop is '이용할 고객 수';
comment on column usermanage.totalprice is '결제 총액';
comment on column usermanage.paycode is '결제 수단 고유 번호 - 부모 pay';
comment on column usermanage.status is '현재 상태(예약중, 예약 확인, 입금 완료, 이용 중, 이용 완료 등)';


--개인(찜/관심목록) 시퀀스
drop sequence likeseq;
create sequence likeseq
  increment by 1
  start with 1
  minvalue 1
  maxvalue 10000
  nocache;
  
--개인(찜/관심목록) 테이블 : 숙소, 관광지, 커뮤니티
--num : 레코드 번호; ucode : 사용자 고유 번호; lcode : likecode, 숙소+관광지+커뮤니티 게시글 코드;
--likedate : 찜한 날짜;
drop table likes cascade constraints;
create table likes(
  num number primary key,
  ucode varchar2(20) not null,
  lcode varchar2(20) not null,
  likedate date default sysdate,
  foreign key(ucode) references users(ucode),
  foreign key(lcode) references notice(postcode),
  foreign key(lcode) references qna(postcode)
);
comment on table likes is '찜/관심목록 테이블';
comment on column likes.num is '레코드 번호';
comment on column likes.ucode is '사용자 고유 번호 - 부모 users';
comment on column likes.lcode is '게시글 코드 - 부모 숙소관광지커뮤니티 게시글 번호';
comment on column likes.likedate is '찜한 날짜';


-------------------------------------------------------------------
--관형님 파트

drop sequence tour_seq;
create sequence tour_seq
	increment by 1
	start with 1
	minvalue 1
	nocache;


drop table touristspot;

create table touristspot(
	tnum number not null primary key,
	tcategory varchar2(45) not null,
	ttitle varchar2(60) not null,
	tcomments varchar2(750),
	tinputid varchar2(30) not null,
	tinputdate date default sysdate,
	taddress1 varchar2(75) not null,
	taddress2 varchar2(75),
	tprice number default 0,
	tdiscount varchar2(30) default '0',
	timage varchar2(60),
	tpoint number default '0' 
);

comment on table touristspot is '관광지 게시판';
comment on column touristspot.tnum is '관광지 번호';
comment on column touristspot.tcategory is '관광지 카테고리';
comment on column touristspot.ttitle is '관광지 제목';
comment on column touristspot.tcomments is '관광지 내용';
comment on column touristspot.tinputid is '관광지 등록 아이디';
comment on column touristspot.tinputdate is '관광지 등록 날짜';
comment on column touristspot.taddress1 is '관광지 주소1';
comment on column touristspot.taddress2 is '관광지 주소2';
comment on column touristspot.tprice is '관광지 가격';
comment on column touristspot.tdiscount is '관광지 할인';
comment on column touristspot.timage is '관광지 이미지';
comment on column touristspot.tpoint is '관광지 포인트';

commit;


--현선님 파트

-- 커뮤니티테이블
DROP TABLE COMMUNITY;

CREATE TABLE COMMUNITY ( 
	NUM NUMBER NOT NULL PRIMARY KEY,
	REVIEW_NUM NUMBER NOT NULL,
	REVIEW_TYPE VARCHAR2(2) NOT NULL,
	IMGURL VARCHAR2(60) NOT NULL,
	TITLE VARCHAR2(200) NOT NULL,
	SUMMARY VARCHAR2(200) NOT NULL,
	CONTENTS CLOB,
	HITS NUMBER DEFAULT '0' NULL,
	RECOMMEND NUMBER DEFAULT '0' NULL,
	STEAMED  NUMBER DEFAULT '0' NULL,
	STAR_RANKING  NUMBER DEFAULT '0' NULL,
	REG_KEYWORD VARCHAR2(600) DEFAULT NULL,
	STATUS VARCHAR2(2) DEFAULT '01' NOT NULL,
	REG_ID VARCHAR2(45) NULL ,
	REG_DATE DATE DEFAULT SYSDATE NULL ,
	MOD_ID VARCHAR2(45) NULL,
	MOD_DATE DATE NULL 
);

COMMENT ON TABLE COMMUNITY IS '커뮤니티테이블';
COMMENT ON COLUMN COMMUNITY.NUM IS '커뮤니티 고유번호';
COMMENT ON COLUMN COMMUNITY.REVIEW_NUM IS '후기 번호(캠핑/글램핑번호 or 관광지번호)';
COMMENT ON COLUMN COMMUNITY.REVIEW_TYPE IS '후기구분값(01:캠핑/글램핑후기, 02:관광지후기) ';
COMMENT ON COLUMN COMMUNITY.IMGURL IS '대표이미지 파일명';
COMMENT ON COLUMN COMMUNITY.TITLE IS '제목';
COMMENT ON COLUMN COMMUNITY.SUMMARY IS '한줄요약';
COMMENT ON COLUMN COMMUNITY.CONTENTS IS '내용';
COMMENT ON COLUMN COMMUNITY.HITS IS '조회수';
COMMENT ON COLUMN COMMUNITY.RECOMMEND IS '추천수(좋아요)';
COMMENT ON COLUMN COMMUNITY.STEAMED IS '찜수';
COMMENT ON COLUMN COMMUNITY.STAR_RANKING IS '별등급';
COMMENT ON COLUMN COMMUNITY.REG_KEYWORD IS '등록키워드';
COMMENT ON COLUMN COMMUNITY.STATUS IS '커뮤니티상태값(01:노출/02:비노출)';
COMMENT ON COLUMN COMMUNITY.REG_ID IS '등록아이디';
COMMENT ON COLUMN COMMUNITY.REG_DATE IS '등록날짜';
COMMENT ON COLUMN COMMUNITY.MOD_ID IS '수정아이디';
COMMENT ON COLUMN COMMUNITY.MOD_DATE IS '수정날짜';

DROP SEQUENCE COMMUNITY_SEQ;
CREATE SEQUENCE COMMUNITY_SEQ
  INCREMENT BY 1
  START WITH 1
  MINVALUE 1
  MAXVALUE 10000
  NOCACHE;
  
--------------------------------------------------

-- 댓글테이블

DROP TABLE REPLY;

CREATE TABLE REPLY ( 
	NUM NUMBER NOT NULL PRIMARY KEY,
	REVIEW_NUM NUMBER NOT NULL,
	REVIEW_TYPE VARCHAR2(2) NOT NULL,
	CONTENTS CLOB,
	REG_ID VARCHAR2(45) NULL ,
	REG_DATE DATE DEFAULT SYSDATE NULL
);

COMMENT ON TABLE REPLY IS '댓글 테이블';
COMMENT ON COLUMN REPLY.NUM IS '댓글 고유번호';
COMMENT ON COLUMN REPLY.REVIEW_NUM IS '후기 번호(캠핑/글램핑번호 or 관광지번호)';
COMMENT ON COLUMN REPLY.REVIEW_TYPE IS '후기구분값(01:캠핑/글램핑후기, 02:관광지후기) ';
COMMENT ON COLUMN REPLY.CONTENTS IS '내용';
COMMENT ON COLUMN REPLY.REG_ID IS '등록아이디';
COMMENT ON COLUMN REPLY.REG_DATE IS '등록날짜';

DROP SEQUENCE REPLY_SEQ;
CREATE SEQUENCE REPLY_SEQ
  INCREMENT BY 1
  START WITH 1
  MINVALUE 1
  MAXVALUE 10000000
  NOCACHE;
  
--------------------------------------------------

-- 평가 등급 테이블 (저장용도)

DROP TABLE RATING;

CREATE TABLE RATING ( 
	REVIEW_NUM NUMBER NOT NULL,
	REVIEW_TYPE VARCHAR2(2) NOT NULL,
	RATING_TYPE VARCHAR2(2) NOT NULL,
	STAR_RANKING  NUMBER DEFAULT '0' NULL,
	REG_ID VARCHAR2(45) NULL ,
	REG_DATE DATE DEFAULT SYSDATE NULL,
	MOD_ID VARCHAR2(45) NULL,
	MOD_DATE DATE NULL 
);

CREATE UNIQUE INDEX RATING_PK ON RATING
(REVIEW_NUM, REVIEW_TYPE, RATING_TYPE, REG_ID)
NOLOGGING;

ALTER TABLE RATING ADD (
  CONSTRAINT RATING_PK
  PRIMARY KEY
  (REVIEW_NUM, REVIEW_TYPE, RATING_TYPE, REG_ID)
  USING INDEX RATING_PK
  ENABLE VALIDATE);

COMMENT ON TABLE RATING IS '좋아요찜별 테이블';
COMMENT ON COLUMN RATING.REVIEW_NUM IS '커뮤니티 후기 고유번호';
COMMENT ON COLUMN RATING.REVIEW_TYPE IS '후기구분값(01:캠핑/글램핑후기, 02:관광지후기) ';
COMMENT ON COLUMN RATING.RATING_TYPE IS '구분값(좋아요,찜,별)) ';
COMMENT ON COLUMN RATING.STAR_RANKING IS '별갯수 ';
COMMENT ON COLUMN RATING.REG_ID IS '등록아이디';
COMMENT ON COLUMN RATING.REG_DATE IS '등록날짜';
COMMENT ON COLUMN RATING.MOD_ID IS '수정아이디';
COMMENT ON COLUMN RATING.MOD_DATE IS '수정날짜';

DROP SEQUENCE RATING_SEQ;
CREATE SEQUENCE RATING_SEQ
  INCREMENT BY 1
  START WITH 1
  MINVALUE 1
  MAXVALUE 10000
  NOCACHE;
  
--------------------------------------------------

