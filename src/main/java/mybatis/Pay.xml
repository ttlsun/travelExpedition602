<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- Pay.xml -->
<mapper namespace="user.pay.model.PayBean">
	<select id="getTotalCount" resultType="int">
		select count(*) from pay
		<if test="whatColumn == null">
			where id like #{id}
		</if>
		<if test="whatColumn == 'paycode'">
			where id like #{id} and paycode like #{keyword}
		</if>
		<if test="whatColumn == 'paydetail'">
			where id like #{id} and (paydetail1 like #{keyword} or paydetail2 like #{keyword})
		</if>
	</select>
	
	<select id="getList" resultType="myPayBean">
		select * from pay
		<if test="whatColumn == null">
			where id like #{id}
		</if>
		<if test="whatColumn == 'paycode'">
			where id like #{id} and paycode like #{keyword}
		</if>
		<if test="whatColumn == 'paydetail'">
			where id like #{id} and (paydetail1 like #{keyword} or paydetail2 like #{keyword})
		</if>
		order by num
	</select>
	
	<select id="getData" resultType="myPayBean">
		select * from pay where num = #{num}	
	</select>
	
	<insert id="registerPay" parameterType="myPayBean">
		insert into pay(num, id, paycode, paydetail1, paydetail2, cvc, regdate)
		values(payseq.nextval, #{id}, #{paycode}, #{paydetail1}, #{paydetail2}, #{cvc}, sysdate)
	</insert>
	
	<select id="paycodeCheck" resultType="myPayBean">
		select paycode from pay where id = #{id} and paycode = #{selectVal}
	</select>
	
	<update id="updatePay" parameterType="myPayBean">
		update pay set paydetail1 = #{paydetail1}, paydetail2 = #{paydetail2}, cvc = #{cvc}, moddate = sysdate, modid = #{modid}
		where num = #{num}
	</update>
	
	<update id="updatePaydetail" parameterType="myPayBean">
		update pay set paydetail2 = #{paydetail2}, moddate = sysdate, modid = #{modid}
		where id = #{id} and paycode = #{paycode}
	</update>
	
	<delete id="deletePay">
		delete from pay where num = #{num}
	</delete>
</mapper>